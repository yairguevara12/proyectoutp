/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package segundaparteproy;

import java.util.Deque;
import java.util.LinkedList;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author JOSE
 */
public class RegistrarPelicula extends javax.swing.JFrame {

    public LinkedList<RegistroPelicula> listRegistroPelicula;
    public LinkedList<RegistroCliente> listRegistroCliente;
    public LinkedList<ClienteEspera> listClienteEspera;
    ColaRegistro colaList = new ColaRegistro();

    public RegistrarPelicula() {
        initComponents();
        this.setLocationRelativeTo(this);
        listRegistroPelicula = new LinkedList<>();
        listRegistroCliente = new LinkedList<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtPelicula = new javax.swing.JTextField();
        txtCliente = new javax.swing.JTextField();
        txtDni = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaRegistro = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaCliente = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaEspera = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/rentar.png"))); // NOI18N
        btnAgregar.setText("Alquilar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre Pelicula:");

        jLabel2.setText("Nombre Cliente");

        jLabel3.setText("DNI: ");

        tablaRegistro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Pelicula", "cant. Alquilada"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaRegistro);

        tablaCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nombre", "Dni", "Pelicula Alquilada"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaCliente.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tablaCliente);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/back.png"))); // NOI18N
        jButton1.setText("REGRESAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tablaEspera.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nombre", "Dni", "Pelicula Alquilada - Espera"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tablaEspera);

        jLabel4.setText("Clientes en Espera");

        jLabel5.setText("Clientes con peliculas alquiladas");

        jLabel6.setText("Pelicula Alquiladas");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(150, 150, 150)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(42, 42, 42)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtDni, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtPelicula, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(45, 45, 45)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))))
                        .addGap(0, 54, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtPelicula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void listarPelicula() {

        DefaultTableModel model = (DefaultTableModel) tablaRegistro.getModel();
        model.setRowCount(0);
        System.out.println(listRegistroPelicula.size());
        /* Pelicula peliculita = new Pelicula();
        peliculita = ListPelicula.get(ListPelicula.size());*/

        for (RegistroPelicula registropeliculita : listRegistroPelicula) {

            String nombre = registropeliculita.getNombre();
            int conteo = registropeliculita.getConteo();
            Object[] data = {nombre, conteo};
            //se agrega en un fila
            model.addRow(data);
        }
    }

    public void listarCliente() {

        DefaultTableModel model = (DefaultTableModel) tablaCliente.getModel();
        model.setRowCount(0);
        System.out.println(listRegistroCliente.size());
        /* Pelicula peliculita = new Pelicula();
        peliculita = ListPelicula.get(ListPelicula.size());*/

        for (RegistroCliente registrocliente : listRegistroCliente) {

            String nombre = registrocliente.getCliente();
            int dni = registrocliente.getDni();
            String pelicula = registrocliente.getPelicula();
            Object[] data = {nombre, dni, pelicula};
            //se agrega en un fila
            model.addRow(data);
        }
    }

    public void listarClienteEspera() {

        DefaultTableModel model = (DefaultTableModel) tablaEspera.getModel();
        model.setRowCount(0);
        System.out.println(listClienteEspera.size());
        /* Pelicula peliculita = new Pelicula();
        peliculita = ListPelicula.get(ListPelicula.size());*/

        for (ClienteEspera clienteEspera : listClienteEspera) {

            String nombre = clienteEspera.getCliente();
            int dni = clienteEspera.getDni();
            String pelicula = clienteEspera.getPelicula();
            Object[] data = {nombre, dni, pelicula};
            //se agrega en un fila
            model.addRow(data);
        }
    }

    public void limpiar() {
        txtPelicula.setText("");
        txtCliente.setText("");
        txtDni.setText("");
    }

    public void registroCliente() {
        String cliente, pelicula;
        int dni;

        cliente = txtCliente.getText();
        dni = Integer.parseInt(txtDni.getText());
        pelicula = txtPelicula.getText();

        RegistroCliente registrocliente = new RegistroCliente();
        registrocliente.setCliente(cliente);
        registrocliente.setDni(dni);
        registrocliente.setPelicula(pelicula);

        this.colaList.enqueueCliente(registrocliente);
        System.out.println("registro a " + registrocliente);
        this.listRegistroCliente = this.colaList.returnListElementsCliente();

    }

    public void registroClienteEspera() {
        String cliente, pelicula;
        int dni;

        cliente = txtCliente.getText();
        dni = Integer.parseInt(txtDni.getText());
        pelicula = txtPelicula.getText();

        ClienteEspera clienteEspera = new ClienteEspera();
        clienteEspera.setCliente(cliente);
        clienteEspera.setDni(dni);
        clienteEspera.setPelicula(pelicula);

        this.colaList.enqueueClienteEspera(clienteEspera);
        System.out.println("registro a " + clienteEspera);
        this.listClienteEspera = this.colaList.returnListElementsClienteEspera();

    }

    public void registroPelicula() {

        if (listRegistroPelicula.size() > 0) {
            System.out.println("--------------------------------");

            System.out.println("es mayor a 0");
            System.out.println("Tamaño del list" + listRegistroPelicula.size());
            //boolean NoExistePelicula = false;
            boolean NoExistePelicula = true;
            RegistroPelicula registropeliculita = null;
          //  int indice = 0;
            /*    for (int i = 0; i < listRegistroPelicula.size(); i++) {
                //System.out.println("contador for" + i);
                RegistroPelicula registropeliculita = listRegistroPelicula.get(i);
                if (registropeliculita.getNombre().compareToIgnoreCase(txtPelicula.getText()) == 0) {
                    //System.out.println("LA PELICULA EXISTE :" + registropeliculita.getNombre());
                    
                    if (registropeliculita.getConteo() < 3) {
                        registroCliente();
                        listarCliente();
                        System.out.println("este es el conteo anterior de la pelicula " + registropeliculita.getNombre() + "-" + registropeliculita.getConteo());
                        registropeliculita.setConteo(registropeliculita.getConteo() + 1);
                        
                        listRegistroPelicula.set(i, registropeliculita);
                        System.out.println("este es el conteo actual de la pelicula " + registropeliculita.getNombre() + "-" + registropeliculita.getConteo());
                        NoExistePelicula = false;
                        //     break;
                    } else {
                        javax.swing.JOptionPane.showMessageDialog(null, "ESTAS EN LA LISTA DE ESPERA");
                        NoExistePelicula = false;
                        registroClienteEspera();
                        listarClienteEspera();
                    }
                } else {
                    NoExistePelicula = true;
                }
            }*/
            //up , buscando  a dory -> 1 , 2

            for (int i = 0; i < listRegistroPelicula.size(); i++) { //recorremos listregistropelicula
                //System.out.println("contador for" + i);
                registropeliculita = listRegistroPelicula.get(i); //obtiene el objeto registropeliculita
                if (registropeliculita.getNombre().compareToIgnoreCase(txtPelicula.getText()) == 0) {
                    NoExistePelicula = false;
                    if (registropeliculita.getConteo() < 3) { //si el conteo es menor a 3
                        registroCliente();
                        listarCliente();
                        System.out.println("este es el conteo anterior de la pelicula " + registropeliculita.getNombre() + "-" + registropeliculita.getConteo());
                        registropeliculita.setConteo(registropeliculita.getConteo() + 1);

                        listRegistroPelicula.set(i, registropeliculita);
                        System.out.println("este es el conteo actual de la pelicula " + registropeliculita.getNombre() + "-" + registropeliculita.getConteo());
                        // NoExistePelicula = false;
                        //     break;
                    } else {
                        javax.swing.JOptionPane.showMessageDialog(null, "ESTAS EN LA LISTA DE ESPERA");
                        //NoExistePelicula = false;
                        registroClienteEspera();
                        listarClienteEspera();
                    }
                }
            }

            if (NoExistePelicula) {
                System.out.println("Nueva pelicula");
                String nombre;
                int conteo = 1;
                int actualSize = 0;

                nombre = txtPelicula.getText();
                RegistroPelicula registroPelicula = new RegistroPelicula();
                registroPelicula.setNombre(nombre);
                registroPelicula.setConteo(conteo);

                this.colaList.enqueuePelicula(registroPelicula);
                this.listRegistroPelicula = this.colaList.returnListElementsPelicula();
                registroCliente();
                listarCliente();
            }

        } else {
            System.out.println("es 0");
            String nombre;
            int conteo = 1;
            int actualSize = 0;

            nombre = txtPelicula.getText();
            RegistroPelicula registroPelicula = new RegistroPelicula();
            registroPelicula.setNombre(nombre);
            registroPelicula.setConteo(conteo);

            this.colaList.enqueuePelicula(registroPelicula);
            this.listRegistroPelicula = this.colaList.returnListElementsPelicula();
            registroCliente();
            listarCliente();
        }

    }


    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed

        /*  String pelicula, cliente;
        int dni;
        int actualSize = 0;
        
        pelicula = txtPelicula.getText();
        cliente = txtCliente.getText();
        dni = Integer.parseInt(txtDni.getText());
        
        RegistroPelicula registroPelicula = new RegistroPelicula();
        registroPelicula.setNombre(pelicula);
        
        registroPelicula.setCliente(cliente);
        registroPelicula.setDni(dni);
        
   
        this.colaList.enqueueCliente(registroPelicula);
        this.listRegistroPelicula = this.colaList.returnListElementsPelicula();
         */
        registroPelicula();
        //registroCliente();
        listarPelicula();
        //listarCliente();
        limpiar();
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        PrincipalPelicula principalPelicula = new PrincipalPelicula();
        principalPelicula.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistrarPelicula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistrarPelicula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistrarPelicula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistrarPelicula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistrarPelicula().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tablaCliente;
    private javax.swing.JTable tablaEspera;
    private javax.swing.JTable tablaRegistro;
    private javax.swing.JTextField txtCliente;
    private javax.swing.JTextField txtDni;
    private javax.swing.JTextField txtPelicula;
    // End of variables declaration//GEN-END:variables
}
